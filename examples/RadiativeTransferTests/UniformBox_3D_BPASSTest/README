This is a test case for the RT BPASS spectrum implementation(can be used for other 
test spectrum as well): The example generates initial conditions with uniformly 
distributed hydro particles and a smaller, also uniformly distributed, star 
particle box in the center such that the hydro particles close to the faces of 
the box have no star neighbours.

Furthermore, the run is set up such that each time step all particles are 
active, and each time step an output is generated. This is necessary for the 
'./rt_uniform_box_checks.py' script to run successfully.

Specifically, we skip the thermochemistry in simulation, so that all the gas
particles will absorb all the photon emitted from the star particles. It is easier 
to test if the star particles emitted the right amount of the photon number.

The `./rt_sanity_checks.py` script tests some general properties of the RT 
debug scheme, and any simulation run with this particular RT scheme should 
pass the tests therein. 

The `swift_rt_debug_io.py` contains IO routines for the debugging output that
is used by the other scripts.

The python scripts with the suffix `-GEAR` do the same as the other scripts, but
are made to test the GEAR RT scheme. Debugging checks must be enabled in the run
in order to create the appropriate outputs (`--enable-debugging-checks`). The
scripts and parameter files for GEAR are written for 4 photon groups, so compile
swift with `--with-rt=GEAR_4`.

Tl;dr: 
    - `./rt_uniform_box_checks.py` only works for this example
    - `./rt_sanity_checks.py` is made to work on any run with the RT debug scheme

    - `./rt_uniform_box_checks-GEAR.py` only works for this example with the
      GEAR scheme with debugging checks enabled
    - `./rt_sanity_checks-GEAR.py` is made to work on any run with the GEAR
      scheme and debugging checks enabled.

For kiara_rt, we configure with:
--with-hydro=sphenix --disable-hand-vec --with-kernel=quartic-spline --disable-mpi --with-hydro-dimension=3 --with-rt=GEAR_3 --with-rt-riemann-solver=GLF --with-grackle=/home/zxiang/codes/grackle/local/ --with-hdf5=/home/zxiang/local/hdf5-1.12.2/hdf5/bin/h5cc --with-subgrid=KIARART --enable-debug

Here kiarart subgrid only enable star, chemistry, cooling and entropy floor.

For BPASS spectrum, here are few notification:
1)we need to specify photon_escape_fraction in yml file
plus:
stellar_luminosity_model: BPASS
stellar_spectrum_type: 2 
stellar_table_path: ./BPASS_chab100.h5
2)when plot by using plotRadiationEnergy.py, we also need to specify the arguement for f_esc
3)average photon energy need to change according to different spectrum in plotRadiationEnergy.py
currently everything is consistent with the bpass_cha100 spectrum
 
